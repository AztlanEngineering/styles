@use "./mixins";

// TODO Cleanup and mixins
$sm-md:800px;
$md-lg:1400px;


/* The following variables can be configured when using the library */

/* Custom properties names */
$default-columns-name:"columns" !default;
$default-column-width-name:"column-width" !default;
$default-gap-name:"gap" !default;

/* Class names */
$default-prefix:"";
$md-prefix:"#{$default-prefix}md-";

/* Number of columns */
$default-columns:8;
$md-columns:14;

/* Grid gap */
$default-gap:1rem;

/* Library definitions start here */

$default-column-width:
  calc((100vw - (#{$default-columns} + 1) * #{$default-gap}) / #{$default-columns});
$md-column-width:
  calc((100vw - (#{$md-columns} + 1) * #{$default-gap}) / #{$md-columns});

$manual-column-width:
  calc(var(--#{$default-column-width-name}) * var(--#{$default-columns-name}) + var(--#{$default-gap-name}) * (var(--#{$default-columns-name}) - 1));

@mixin main() {
  @include mixins.media($from:$sm-md) {
    :root {
      --#{$default-columns-name}: #{$md-columns};
      --#{$default-column-width-name}: #{$md-column-width};
    }
  }

  :root {
    --#{$default-columns-name}: #{$default-columns};
    --#{$default-column-width-name}: #{$default-column-width};
    --#{$default-gap-name}: #{$default-gap};
  }

  .grid {
    display: grid;
    gap: var(--#{$default-gap-name});
    grid-template-columns: repeat(var(--#{$default-columns-name}), 1fr);
  }

  .container {
    grid-column: 1/-1;
  }

  .section {
    &.padded {
      padding: 0 var(--#{$default-gap-name});
    }
  }

  .dense {
    grid-auto-flow: row dense;
  }

  .manual {
    min-width: $manual-column-width;
    width: $manual-column-width;
  }

  .manual-mobile-only {
    @include mixins.media($from:$sm-md) {
      min-width: unset;
      width: unset;
    }
    min-width: $manual-column-width;
    width: $manual-column-width;
  }

  @for $i from 1 through $default-columns {
    .#{$default-prefix}start-#{$i} {
      grid-column-start: $i;
    }
    .#{$default-prefix}span-#{$i} {
      --#{$default-columns-name}: #{$i};
      grid-column-end: span $i;
    }
  }

  @for $i from 1 through $md-columns {
    @include mixins.media($from:$sm-md) {
      .#{$md-prefix}start-#{$i} {
        grid-column-start: $i;
      }
      .#{$md-prefix}span-#{$i} {
        --#{$default-columns-name}: #{$i};
        grid-column-end: span $i;
      }
    }
  }
}

@include main;
